%This script circumvents the lack of a goto command in matlab for the
%specific case of the CCK code stating GOTO 200
%P200='200 START'
%C  Calculate Diff coef.

ZZZ=0.1;%relaxation factor

if ITSOLVE==0
    TP2=TGUESS;
end
TM=(TP2+TG)/2;

[ MOLF,P,TM,DO2,DH2O,DN2,DH2,DCO2,DCO ] =...
 DIFFUSE( MOLF,P,TM );

FLAG=1;

%C  Calculate gas properties

[ TM,MOLF,LAMBGAS,CPCH4,CPH2,CPCO2,CPCO,CPO2,CPH2O ] =...
 GASPROPS( TM,MOLF );

%C  Calculate CO/CO2 ratio

COCO2 = AC*exp(-EC/(1.987*TP2));
FCO2 = 1/(1+ COCO2);
GAMMA = (FCO2-1)/(FCO2+1);
if abs(GAMMA)<0.01
    GAMMA = 0.01;
end

% C   Calculate stoich coefficient: mol O2/gm carbon 
% C   and mass transfer coeff.and max rates of gasification

STOICH = 0.5*(1.+ FCO2)/12;
DEFF = DO2*(PORFILM^2.5);
KDIFF =  SH*DO2*DEFF*DPCM/((82.1*TM*STOICH*...
     ((SH*FILMDEL*DO2*DCCM)+(DEFF*DCCM*DCCM))));
DEFFCO2 = DCO2*(PORFILM^2.5);
DEFFH2O = DH2O*(PORFILM^2.5);
DEFFH2 = DH2*(PORFILM^2.5);
KDIFFCO2 =  SH*DCO2*DEFFCO2*DPCM/(82.1*TM*STOICHCO2*...
        (SH*FILMDEL*DCO2*DCCM+DEFFCO2*DCCM*DCCM));
KDIFFH2O =  SH*DH2O*DEFFH2O*DPCM/(82.1*TM*STOICHH2O*...
        (SH*FILMDEL*DH2O*DCCM+DEFFH2O*DCCM*DCCM));
KDIFFH2 =  SH*DCO2*DEFFH2*DPCM/(82.1*TM*STOICHH2*...
        (SH*FILMDEL*DH2*DCCM+DEFFH2*DCCM*DCCM));
DEFFCO = DCO*(PORFILM^2.5);
KDIFFCO =  SH*DCO*DEFFCO*DPCM/(82.1*TM*...
        (SH*FILMDEL*DCO*DCCM+DEFFCO*DCCM*DCCM));
if GAMMA^2>1E-4
    QMAX = (KDIFF*P/GAMMA)*log(1./(1.-GAMMA*POX/P));
    QMAXCO2 = (KDIFFCO2*P/GAMMACO2)*log(1./(1.-GAMMACO2*PCO2/P));
    QMAXH2O = (KDIFFH2O*P/GAMMAH2O)*log(1./(1.-GAMMAH2O*PH2O/P));
    QMAXH2 = (KDIFFH2*P/GAMMAH2)*log(1./(1.-GAMMAH2*PH2/P));
else
      QMAX = KDIFF*POX;
	  QMAXCO2 = KDIFFCO2*PCO2;
	  QMAXH2O = KDIFFH2O*PH2O;
	  QMAXH2 = KDIFFH2*PH2;    
end

if max([KDIFF,KDIFFCO2,KDIFFH2O,KDIFFH2])<1E-30
    IFLAGERR=IFLAGERR+1;
    TP=TG;
    Q=1E-7;
    goto500;
    return
end

%C  Calculate qrxn from kinetics at new TP

for i=1:5
    PS1RXN(i)=PS2RXN(i);
end

DEFFC = DO2*(PORINCOR)/TAUBYF;
DEFFCCO2 = DCO2*(PORINCOR)/TAUBYF;
DEFFCH2O = DH2O*(PORINCOR)/TAUBYF;
DEFFCH2 = DH2*(PORINCOR)/TAUBYF;
DEFFCCO = DCO*(PORINCOR)/TAUBYF;

[ XK3O,XK2OBYK3O,XK3OBYK1O,E3,...
      E2,E1,TP2,PS1RXN(1),DEFFC,N,CINCOR,DCCM,STOICH,ETA,ETAC,ETAH,QRXN,...
      XK7O,XK4OBYK7O,XK4ROBYK7O,XK5OBYK7O,XK6OBYK7O,XK6ROBYK7O,XK8OBYK7O,...
      E7,E4mE7,E4RmE7,E5mE7,E6mE7,E6RmE7,E8mE7,QCOMB,QCO2,QH2O,QH2,...
      PS1RXN(2),PS1RXN(3),PS1RXN(4),PS1RXN(5),DEFFCCO2,DEFFCH2O,DEFFCCO,...
      DEFFCH2,NEFF,NEFFCO2,NEFFH2O ] =...
 EIGHTSTEP( XK3O,XK2OBYK3O,XK3OBYK1O,E3,...
      E2,E1,TP2,PS1RXN(1),DEFFC,N,CINCOR,DCCM,STOICH,ETA,ETAC,ETAH,XK7O,...
      XK4OBYK7O,XK4ROBYK7O,XK5OBYK7O,XK6OBYK7O,XK6ROBYK7O,XK8OBYK7O,...
      E7,E4mE7,E4RmE7,E5mE7,E6mE7,E6RmE7,E8mE7,...
      PS1RXN(2),PS1RXN(3),PS1RXN(4),PS1RXN(5),DEFFCCO2,DEFFCH2O,DEFFCCO,DEFFCH2 );
     
if QCOMB>QMAX;
    QCOMB=.999*QMAX;
end
if QCO2>QMAXCO2
    QCO2=.999*QMAXCO2;
end
if QH2O>QMAXH2O
    QH2O=.999*QMAXH2O;
end
if QH2>QMAXH2
    QH2=.999*QMAXH2;
end
if GAMMA^2<1E-4
    PS1DIFF(1)=POX-(QCOMB/KDIFF);
else
    PS1DIFF(1)=(P/GAMMA)*(1-(1-GAMMA*POX/P)*...
        exp(GAMMA*QCOMB/(KDIFF*P)));
end

% C	PS1DIFF(2) = (P/GAMMAH2O)*(1.-(1.-GAMMAH2O*PH2O/P)*
% C     1   EXP(GAMMAH2O*QH2O/(KDIFFH2O*P)))

PS1DIFF(2) = PH2O-(QH2O/KDIFFH2O);
PS1DIFF(3) = PCO2-((QCO2-QCOMB*FCO2)/KDIFFCO2);% ! USE NET SPECIES DEPLETION FLUX
PS1DIFF(4) = PH2-((QH2-QH2O*(STOICHH2O/STOICHH2))/KDIFFH2);% ! USE NET SPECIES DEPLETION FLUX
PS1DIFF(5) = PCO + (2*QCO2+QCOMB*(1-FCO2)+QH2O)/(12*KDIFFCO);%! USE NET SPECIES DEPLETION FLUX AND NOTE THE DIFFERENT SIGN; CO IS A NET PRODUCT RATHER THAN A NET REACTANT		 

for i=1:5
    PSERR1(i)=PS1DIFF(i)-PS1RXN(i);
end

%C   Look for q = 0.0 and if so skip ahead    

if max([POX,PCO2,PH2O,PH2])<.0001
    QCOMB = 0.0;
    QCO2 = 0.0;
    QH2O = 0.0;
    QH2 = 0.0;
    QRXN = 0.0;
    for i=1:4
        PS1RXN(i)=0;
    end
    goto350;
    return
end

%C  Inner iteration loop for Ps at the current TP guess

for i=1:3
    PS2RXN(i)=.8*PS1RXN(i);
end
PS2RXN(4)=1.1*PS1RXN(4);
PS2RXN(5)=1.1*PS1RXN(5);


iterations=200;
for j=1:iterations

    [ XK3O,XK2OBYK3O,XK3OBYK1O,E3,...
      E2,E1,TP2,PS2RXN(1),DEFFC,N,CINCOR,DCCM,STOICH,ETA,ETAC,ETAH,QRXN,...
      XK7O,XK4OBYK7O,XK4ROBYK7O,XK5OBYK7O,XK6OBYK7O,XK6ROBYK7O,XK8OBYK7O,...
      E7,E4mE7,E4RmE7,E5mE7,E6mE7,E6RmE7,E8mE7,QCOMB,QCO2,QH2O,QH2,...
      PS2RXN(2),PS2RXN(3),PS2RXN(4),PS2RXN(5),DEFFCCO2,DEFFCH2O,DEFFCCO,...
      DEFFCH2,NEFF,NEFFCO2,NEFFH2O ] =...
 EIGHTSTEP( XK3O,XK2OBYK3O,XK3OBYK1O,E3,...
      E2,E1,TP2,PS2RXN(1),DEFFC,N,CINCOR,DCCM,STOICH,ETA,ETAC,ETAH,...
      XK7O,XK4OBYK7O,XK4ROBYK7O,XK5OBYK7O,XK6OBYK7O,XK6ROBYK7O,XK8OBYK7O,...
      E7,E4mE7,E4RmE7,E5mE7,E6mE7,E6RmE7,E8mE7,...
      PS2RXN(2),PS2RXN(3),PS2RXN(4),PS2RXN(5),DEFFCCO2,DEFFCH2O,DEFFCCO,...
      DEFFCH2 );
       
if QCOMB>QMAX
    QCOMB=.999*QMAX;
end
if QCO2>QMAXCO2
    QCO2=.999*QMAXCO2;
end
if QH2O>QMAXH2O
    QH2O=.999*QMAXH2O;
end
if QH2>QMAXH2
    QH2=.999*QMAXH2;
end
if GAMMA^2<1E-4
    PS2DIFF(1)=POX-(QCOMB/KDIFF);
else
    PS2DIFF(1)=(P/GAMMA)*(1-((1-GAMMA*POX/P)*...
        exp(GAMMA*QCOMB/(KDIFF*P))));
end

PS2DIFF(2) = PH2O-(QH2O/KDIFFH2O);
PS2DIFF(3) = PCO2-((QCO2-QCOMB*FCO2)/KDIFFCO2);% ! USE NET SPECIES DEPLETION FLUX
PS2DIFF(4) = PH2-((QH2-QH2O*(STOICHH2O/STOICHH2))/KDIFFH2);% ! USE NET SPECIES DEPLETION FLUX
PS2DIFF(5) = PCO + (2.*QCO2+QCOMB*(1.-FCO2)+QH2O)...
             /(12.*KDIFFCO);%! USE NET SPECIES DEPLETION FLUX AND NOTE THE DIFFERENT SIGN; CO IS A NET PRODUCT RATHER THAN A NET REACTANT

for i=1:5
    PSERR2(i)=PS2DIFF(i)-PS2RXN(i);
    PSTEST(i)=PSERR2(i)^2;
end

if max(PSTEST)<PTOL
    goto350
    return
end
for i=1:5
    if abs(PSERR2(i)-PSERR1(i))<1E-20
        PSNEW(i)=PS2RXN(i)+.3*(PS2RXN(i)-PS1RXN(i));
    else
        PSNEW(i)=PS2RXN(i)-ZZZ*PDAMP*PSERR2(i)*...
            (PS2RXN(i)-PS1RXN(i))/(PSERR2(i)-PSERR1(i));
    end
    if PSNEW(i)<1E-5
        PSNEW(i)=PS2RXN(i)/2;
    end
    if PSNEW(i)<1E-8
        PSNEW(i)=1E-8;
    end
end

if PSNEW(1)>POX
    PSNEW(1)=POX;
end
if PSNEW(2)>PH2O
    PSNEW(2)=PH2O;
end
if (PSNEW(3)>PCO2)&&(POX<.001) 
    PSNEW(3)=PCO2;
end
if PSNEW(4)>PH2&&(PH2O<.001)
    PSNEW(4)=PH2;
end
if PSNEW(5)<PCO
    PSNEW(5)=PCO;
end
for i=1:5
    PSERR1(i)=PSERR2(i);
    PS1RXN(i)=PS2RXN(i);
    PS2RXN(i)=PSNEW(i);
    err_rec(j,i)=PSERR2(i);
end

if j>9
    if max(abs((err_rec(j-1,i)-PSERR2(i))))<1e-10 && j>9
    goto300;
    return
    end
end


if j==(iterations-1)
    IFLAGERR=IFLAGERR+1;
end



end

%P200='200 END'
goto300;
return

